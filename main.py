# Importing required libraries
import telebot
import os
import openai
from keep_alive import keep_alive  # importing keep_alive file and keep_alive function for running the bot continuously

# Retrieving environment variables
BOT_KEY = os.environ['telgramBotKey']  # Telegram Bot API key
AI_KEY = os.environ['openAIKey']  # OpenAI API key

API_ENDPOINT = 'https://api.openai.com/v1/chat/completions'
openai.api_key = AI_KEY

# Creating a TeleBot instance using the Telegram Bot API key
bot = telebot.TeleBot(BOT_KEY)

# Handler function for '/start' and '/hello' commands
@bot.message_handler(commands=['start', 'hello'])
def send_welcome(message):
    bot.reply_to(message, "Howdy, how are you doing?")

# Function to check if a message should trigger a response
def input_message(message):
    return True

# Function to generate a response using OpenAI's Completion API
def reply(input_message):
  '''Send the message to openAI api to get the response.
  input = message
  output = respose from openAI GPT 3.5
  '''
  response = openai.Completion.create(
        model="text-davinci-003",
        prompt=input_message,
        temperature=0,
        max_tokens=100
    )
  response = response['choices'][0]['text'] # Taking the first reponse of the reply from the text in json
  response = response[2:]  # Removing the first two characters from the response
  return response

# Handler function for messages that satisfy the input_message condition
@bot.message_handler(func=input_message)
def response(input_message):
  '''Takes the input from the telegram bot and sends the reply generated by the reply function
  input: message from telgram user
  output: message generated from reply function
  '''
  output_message = reply(input_message.text)
  bot.reply_to(input_message, output_message)

# keep_alive function keeps the bot running continuously
keep_alive()

# Start polling for new updates from Telegram
bot.infinity_polling()
